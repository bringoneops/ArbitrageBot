name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Detect whether Trunk is configured in this repo
      - id: detect_trunk
        name: Detect Trunk config
        shell: bash
        run: |
          if [ -f .trunk/trunk.yaml ]; then
            echo "present=true" >> "$GITHUB_OUTPUT"
          else
            echo "present=false" >> "$GITHUB_OUTPUT"
          fi

      # --- Trunk path (only runs if .trunk/trunk.yaml exists) ---
      - name: Cache Trunk tools
        if: steps.detect_trunk.outputs.present == 'true'
        uses: actions/cache@v3
        with:
          path: ~/.cache/trunk
          key: ${{ runner.os }}-trunk-${{ hashFiles('.trunk/trunk.yaml') }}
          restore-keys: ${{ runner.os }}-trunk-

      - name: Install Trunk
        if: steps.detect_trunk.outputs.present == 'true'
        shell: bash
        run: |
          set -euxo pipefail
          curl -fsSL https://get.trunk.io | bash
          trunk --version
          trunk install

      - name: Run Trunk fmt
        if: steps.detect_trunk.outputs.present == 'true'
        run: trunk fmt --ci

      - name: Run Trunk check
        if: steps.detect_trunk.outputs.present == 'true'
        run: trunk check --ci

      # --- Fallback path (no Trunk config present) ---
      - name: Set up Rust (for fallback linters)
        if: steps.detect_trunk.outputs.present == 'false'
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cargo fmt (fallback)
        if: steps.detect_trunk.outputs.present == 'false'
        run: cargo fmt --all -- --check

      - name: Cargo clippy (fallback)
        if: steps.detect_trunk.outputs.present == 'false'
        run: cargo clippy --all-targets --all-features -- -D warnings

  bridgecrew:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: Run Bridgecrew scan
        uses: bridgecrewio/checkov-action@v12
        with:
          quiet: true

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo deps
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Run tests
        run: cargo test --all --locked

      - name: Ensure Tarpaulin installed
        run: |
          if ! command -v cargo-tarpaulin >/dev/null 2>&1; then
            cargo install cargo-tarpaulin --locked
          fi

      - name: Generate coverage report
        run: cargo tarpaulin --out Xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: tarpaulin-report.xml

name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache Trunk tools
        uses: actions/cache@v3
        with:
          path: ~/.cache/trunk
          key: ${{ runner.os }}-trunk-${{ hashFiles('.trunk/trunk.yaml') }}
          restore-keys: ${{ runner.os }}-trunk-

      - name: Install & init Trunk
        run: |
          set -euxo pipefail
          curl -fsSL https://get.trunk.io | bash
          if [ ! -d .trunk ]; then
            echo "No .trunk/ config found; initializing for CI..."
            trunk init --ci
          fi
          trunk install

      - name: Run Trunk fmt
        run: trunk fmt --ci

      - name: Run Trunk check
        run: trunk check --ci

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo deps
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Run tests
        run: cargo test --all --locked

      - name: Ensure Tarpaulin installed
        run: |
          if ! command -v cargo-tarpaulin >/dev/null 2>&1; then
            cargo install cargo-tarpaulin --locked
          fi

      - name: Generate coverage report
        run: cargo tarpaulin --out Xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: tarpaulin-report.xml
